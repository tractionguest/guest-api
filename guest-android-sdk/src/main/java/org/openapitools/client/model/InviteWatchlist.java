/**
 * Traction Guest API
 * A compelling story about a lone device, on a quest for its data.
 *
 * The version of the OpenAPI document: 0.11.4
 * Contact: bmckay@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ExternalWatchlistResult;
import org.openapitools.client.model.InternalWatchlistResult;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The root of the InviteWatchlist type&#39;s schema.
 **/
@ApiModel(description = "The root of the InviteWatchlist type's schema.")
public class InviteWatchlist {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("external_colours")
  private List<String> externalColours = null;
  @SerializedName("internal_colours")
  private List<String> internalColours = null;
  @SerializedName("external")
  private List<ExternalWatchlistResult> external = null;
  @SerializedName("internal")
  private List<InternalWatchlistResult> internal = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Deprecated
   **/
  @ApiModelProperty(value = "Deprecated")
  public List<String> getExternalColours() {
    return externalColours;
  }
  public void setExternalColours(List<String> externalColours) {
    this.externalColours = externalColours;
  }

  /**
   * Deprecated
   **/
  @ApiModelProperty(value = "Deprecated")
  public List<String> getInternalColours() {
    return internalColours;
  }
  public void setInternalColours(List<String> internalColours) {
    this.internalColours = internalColours;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<ExternalWatchlistResult> getExternal() {
    return external;
  }
  public void setExternal(List<ExternalWatchlistResult> external) {
    this.external = external;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<InternalWatchlistResult> getInternal() {
    return internal;
  }
  public void setInternal(List<InternalWatchlistResult> internal) {
    this.internal = internal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InviteWatchlist inviteWatchlist = (InviteWatchlist) o;
    return (this.id == null ? inviteWatchlist.id == null : this.id.equals(inviteWatchlist.id)) &&
        (this.externalColours == null ? inviteWatchlist.externalColours == null : this.externalColours.equals(inviteWatchlist.externalColours)) &&
        (this.internalColours == null ? inviteWatchlist.internalColours == null : this.internalColours.equals(inviteWatchlist.internalColours)) &&
        (this.external == null ? inviteWatchlist.external == null : this.external.equals(inviteWatchlist.external)) &&
        (this.internal == null ? inviteWatchlist.internal == null : this.internal.equals(inviteWatchlist.internal));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.externalColours == null ? 0: this.externalColours.hashCode());
    result = 31 * result + (this.internalColours == null ? 0: this.internalColours.hashCode());
    result = 31 * result + (this.external == null ? 0: this.external.hashCode());
    result = 31 * result + (this.internal == null ? 0: this.internal.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InviteWatchlist {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  externalColours: ").append(externalColours).append("\n");
    sb.append("  internalColours: ").append(internalColours).append("\n");
    sb.append("  external: ").append(external).append("\n");
    sb.append("  internal: ").append(internal).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
