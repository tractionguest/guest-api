/**
 * Traction Guest API
 * The Traction Guest API is currently under limited release to select customers as we gather and iterate on feedback.  # Getting Started If you are interested in getting early access to the API, please send us an email to [support@tractionguest.com](mailto:support@tractionguest.com).  We will also add you to our Slack channel where you can ask questions and get further help.  # Terms and Conditions Please visit: [https://tractionguest.com/tos/api/](https://tractionguest.com/tos/api/)  # Versioning This API follows [semantic versioning](https://semver.org/), which follows the `Major`.`Minor`.`Patch` format.  * The `Major` number increments when potentially incompatible changes are made. * The `Minor` number increments when backwards-compatible additions are made. * The `Patch` number increments when backwards-compatible bug-fixes are made. 
 *
 * The version of the OpenAPI document: 0.13.0
 * Contact: support@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Docusign;
import org.openapitools.client.model.SimpleSignature;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class SignableDocument {
  
  @SerializedName("simple_signatures")
  private List<SimpleSignature> simpleSignatures = null;
  @SerializedName("docusigns")
  private List<Docusign> docusigns = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SimpleSignature> getSimpleSignatures() {
    return simpleSignatures;
  }
  public void setSimpleSignatures(List<SimpleSignature> simpleSignatures) {
    this.simpleSignatures = simpleSignatures;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Docusign> getDocusigns() {
    return docusigns;
  }
  public void setDocusigns(List<Docusign> docusigns) {
    this.docusigns = docusigns;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignableDocument signableDocument = (SignableDocument) o;
    return (this.simpleSignatures == null ? signableDocument.simpleSignatures == null : this.simpleSignatures.equals(signableDocument.simpleSignatures)) &&
        (this.docusigns == null ? signableDocument.docusigns == null : this.docusigns.equals(signableDocument.docusigns));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.simpleSignatures == null ? 0: this.simpleSignatures.hashCode());
    result = 31 * result + (this.docusigns == null ? 0: this.docusigns.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignableDocument {\n");
    
    sb.append("  simpleSignatures: ").append(simpleSignatures).append("\n");
    sb.append("  docusigns: ").append(docusigns).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
