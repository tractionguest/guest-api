/**
 * Traction Guest API
 * A compelling story about a lone device, on a quest for its data.
 *
 * The version of the OpenAPI document: 0.11.1
 * Contact: bmckay@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SigninUpdateParams {
  
  @SerializedName("is_signed_out")
  private Boolean isSignedOut = null;
  @SerializedName("is_acknowledged")
  private Boolean isAcknowledged = null;
  @SerializedName("is_accounted_for")
  private Boolean isAccountedFor = null;

  /**
   * Used to sign out the `Signin`, can only be set to `true`.
   **/
  @ApiModelProperty(value = "Used to sign out the `Signin`, can only be set to `true`.")
  public Boolean getIsSignedOut() {
    return isSignedOut;
  }
  public void setIsSignedOut(Boolean isSignedOut) {
    this.isSignedOut = isSignedOut;
  }

  /**
   * Used to acknowledge the `Signin`, can only be set to `true`.
   **/
  @ApiModelProperty(value = "Used to acknowledge the `Signin`, can only be set to `true`.")
  public Boolean getIsAcknowledged() {
    return isAcknowledged;
  }
  public void setIsAcknowledged(Boolean isAcknowledged) {
    this.isAcknowledged = isAcknowledged;
  }

  /**
   * Used when keeping track of people in emergency situations
   **/
  @ApiModelProperty(value = "Used when keeping track of people in emergency situations")
  public Boolean getIsAccountedFor() {
    return isAccountedFor;
  }
  public void setIsAccountedFor(Boolean isAccountedFor) {
    this.isAccountedFor = isAccountedFor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SigninUpdateParams signinUpdateParams = (SigninUpdateParams) o;
    return (this.isSignedOut == null ? signinUpdateParams.isSignedOut == null : this.isSignedOut.equals(signinUpdateParams.isSignedOut)) &&
        (this.isAcknowledged == null ? signinUpdateParams.isAcknowledged == null : this.isAcknowledged.equals(signinUpdateParams.isAcknowledged)) &&
        (this.isAccountedFor == null ? signinUpdateParams.isAccountedFor == null : this.isAccountedFor.equals(signinUpdateParams.isAccountedFor));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.isSignedOut == null ? 0: this.isSignedOut.hashCode());
    result = 31 * result + (this.isAcknowledged == null ? 0: this.isAcknowledged.hashCode());
    result = 31 * result + (this.isAccountedFor == null ? 0: this.isAccountedFor.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SigninUpdateParams {\n");
    
    sb.append("  isSignedOut: ").append(isSignedOut).append("\n");
    sb.append("  isAcknowledged: ").append(isAcknowledged).append("\n");
    sb.append("  isAccountedFor: ").append(isAccountedFor).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
