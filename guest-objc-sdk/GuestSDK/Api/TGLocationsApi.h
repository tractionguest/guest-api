#import <Foundation/Foundation.h>
#import "TGErrorsList.h"
#import "TGLocation.h"
#import "TGPaginatedLocationsList.h"
#import "TGApi.h"

/**
* Traction Guest API
* The Traction Guest API is currently under limited release to select customers as we gather and iterate on feedback.  # Getting Started If you are interested in getting early access to the API, please send us an email to [support@tractionguest.com](mailto:support@tractionguest.com).  We will also add you to our Slack channel where you can ask questions and get further help.  # Terms and Conditions Please visit: [https://tractionguest.com/tos/api/](https://tractionguest.com/tos/api/)  # Versioning This API follows [semantic versioning](https://semver.org/), which follows the `Major`.`Minor`.`Patch` format.  * The `Major` number increments when potentially incompatible changes are made. * The `Minor` number increments when backwards-compatible additions are made. * The `Patch` number increments when backwards-compatible bug-fixes are made. 
*
* The version of the OpenAPI document: 0.13.0
* Contact: support@tractionguest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface TGLocationsApi: NSObject <TGApi>

extern NSString* kTGLocationsApiErrorDomain;
extern NSInteger kTGLocationsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(TGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get the details of a location
/// Gets details of a single instance of `Location`.
///
/// @param locationId 
/// 
///  code:200 message:"Successful response - returns a single `Location`.",
///  code:400 message:"A generic error",
///  code:401 message:"You don't have permission to view this Location",
///  code:403 message:"You do not have permission for this action",
///  code:404 message:"The Location does not exist"
///
/// @return TGLocation*
-(NSURLSessionTask*) getLocationWithLocationId: (NSString*) locationId
    completionHandler: (void (^)(TGLocation* output, NSError* error)) handler;


/// List all Locations
/// Gets a list of all `Location` entities.
///
/// @param limit Limits the results to a specified number, defaults to 50 (optional)
/// @param offset Offsets the results to a specified number, defaults to 0 (optional)
/// @param query Queries by Location &#x60;name&#x60; (optional)
/// @param include A list of comma-separated related models to include (optional)
/// 
///  code:200 message:"Successful response - returns an array of `Location` entities.",
///  code:400 message:"A generic error",
///  code:401 message:"You don't have permission to view these Locations",
///  code:403 message:"You do not have permission for this action"
///
/// @return TGPaginatedLocationsList*
-(NSURLSessionTask*) getLocationsWithLimit: (NSNumber*) limit
    offset: (NSNumber*) offset
    query: (NSString*) query
    include: (NSString*) include
    completionHandler: (void (^)(TGPaginatedLocationsList* output, NSError* error)) handler;



@end
