//
// AuditLogsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class AuditLogsAPI {
    /**
     Get an AuditLog
     
     - parameter auditLogId: (path) A unique identifier for an &#x60;AuditLog&#x60;. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getAuditLog(auditLogId: String, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<AuditLog, Error>) -> Void)) {
        getAuditLogWithRequestBuilder(auditLogId: auditLogId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get an AuditLog
     - GET /audit_logs/{auditLogId}
     - Gets the details of a single instance of an `AuditLog`.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter auditLogId: (path) A unique identifier for an &#x60;AuditLog&#x60;. 
     - returns: RequestBuilder<AuditLog> 
     */
    open class func getAuditLogWithRequestBuilder(auditLogId: String) -> RequestBuilder<AuditLog> {
        var path = "/audit_logs/{auditLogId}"
        let auditLogIdPreEscape = "\(APIHelper.mapValueToPathItem(auditLogId))"
        let auditLogIdPostEscape = auditLogIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{auditLogId}", with: auditLogIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AuditLog>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List All AuditLogs
     
     - parameter limit: (query) Limits the results to a specified number, defaults to 50 (optional)
     - parameter offset: (query) Offsets the results to a specified number, defaults to 0 (optional)
     - parameter sortBy: (query) Sorts by the field name and direction provided where the pattern is &#x60;FIELD_NAME_DIRECTION&#x60; (optional)
     - parameter auditableId: (query) The unique ID of a model that has associated audit logs (optional)
     - parameter auditableType: (query) The name of the model that has associated audit logs. Valid values include: - &#x60;user&#x60; - &#x60;device_configuration&#x60; - &#x60;signin&#x60; - &#x60;invite&#x60; - &#x60;watchlist_record&#x60; - &#x60;account_preference&#x60; - &#x60;signout&#x60; - &#x60;host&#x60; - &#x60;invite_watchlist&#x60; - &#x60;location_preference&#x60; - &#x60;parking_lot&#x60; - &#x60;parking_stall&#x60; - &#x60;permission_bundle&#x60; - &#x60;person&#x60; - &#x60;physical_access_grant&#x60; - &#x60;physical_access_provider&#x60; - &#x60;physical_access_rule&#x60; - &#x60;security_badge_type&#x60; - &#x60;signin_watchlist&#x60; - &#x60;user_group_physical_access_rule&#x60; - &#x60;visitor&#x60; - &#x60;bulk_data_batch&#x60;  (optional)
     - parameter actionType: (query) The action performed by the user. Valid values include: - &#x60;create&#x60; - &#x60;update&#x60; - &#x60;destroy&#x60;  (optional)
     - parameter userId: (query) The ID of the user who performed the database change (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getAuditLogs(limit: Int? = nil, offset: Int? = nil, sortBy: String? = nil, auditableId: Int? = nil, auditableType: String? = nil, actionType: String? = nil, userId: Int? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<PaginatedAuditLogsList, Error>) -> Void)) {
        getAuditLogsWithRequestBuilder(limit: limit, offset: offset, sortBy: sortBy, auditableId: auditableId, auditableType: auditableType, actionType: actionType, userId: userId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     List All AuditLogs
     - GET /audit_logs
     - Gets a list of all `AuditLog` entities.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter limit: (query) Limits the results to a specified number, defaults to 50 (optional)
     - parameter offset: (query) Offsets the results to a specified number, defaults to 0 (optional)
     - parameter sortBy: (query) Sorts by the field name and direction provided where the pattern is &#x60;FIELD_NAME_DIRECTION&#x60; (optional)
     - parameter auditableId: (query) The unique ID of a model that has associated audit logs (optional)
     - parameter auditableType: (query) The name of the model that has associated audit logs. Valid values include: - &#x60;user&#x60; - &#x60;device_configuration&#x60; - &#x60;signin&#x60; - &#x60;invite&#x60; - &#x60;watchlist_record&#x60; - &#x60;account_preference&#x60; - &#x60;signout&#x60; - &#x60;host&#x60; - &#x60;invite_watchlist&#x60; - &#x60;location_preference&#x60; - &#x60;parking_lot&#x60; - &#x60;parking_stall&#x60; - &#x60;permission_bundle&#x60; - &#x60;person&#x60; - &#x60;physical_access_grant&#x60; - &#x60;physical_access_provider&#x60; - &#x60;physical_access_rule&#x60; - &#x60;security_badge_type&#x60; - &#x60;signin_watchlist&#x60; - &#x60;user_group_physical_access_rule&#x60; - &#x60;visitor&#x60; - &#x60;bulk_data_batch&#x60;  (optional)
     - parameter actionType: (query) The action performed by the user. Valid values include: - &#x60;create&#x60; - &#x60;update&#x60; - &#x60;destroy&#x60;  (optional)
     - parameter userId: (query) The ID of the user who performed the database change (optional)
     - returns: RequestBuilder<PaginatedAuditLogsList> 
     */
    open class func getAuditLogsWithRequestBuilder(limit: Int? = nil, offset: Int? = nil, sortBy: String? = nil, auditableId: Int? = nil, auditableType: String? = nil, actionType: String? = nil, userId: Int? = nil) -> RequestBuilder<PaginatedAuditLogsList> {
        let path = "/audit_logs"
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": limit?.encodeToJSON(), 
            "offset": offset?.encodeToJSON(), 
            "sort_by": sortBy?.encodeToJSON(), 
            "auditable_id": auditableId?.encodeToJSON(), 
            "auditable_type": auditableType?.encodeToJSON(), 
            "action_type": actionType?.encodeToJSON(), 
            "user_id": userId?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<PaginatedAuditLogsList>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
