//
// CapacitiesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class CapacitiesAPI {
    /**
     Get the capacity details for a location
     
     - parameter locationId: (path)  
     - parameter hoursToCalculate: (query) The next N number of hours, the data needs to be calculated. Range from 1 to 24. If not set, it defaults to 8. (optional, default to 8)
     - parameter timestamp: (query) ISO8601 timestamp(includes the offset value) to use as the start point for the capacity estimate report. Defaults to the current local timestamp of the location if not provided. Eg: \&quot;2020-07-16T17:05:08-07:00\&quot; (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getLocationCapacity(locationId: String, hoursToCalculate: Int? = nil, timestamp: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<CapacityResponse, Error>) -> Void)) {
        getLocationCapacityWithRequestBuilder(locationId: locationId, hoursToCalculate: hoursToCalculate, timestamp: timestamp).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get the capacity details for a location
     - GET /locations/{location_id}/capacities
     - Gets the details of the future capacity in a location.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter locationId: (path)  
     - parameter hoursToCalculate: (query) The next N number of hours, the data needs to be calculated. Range from 1 to 24. If not set, it defaults to 8. (optional, default to 8)
     - parameter timestamp: (query) ISO8601 timestamp(includes the offset value) to use as the start point for the capacity estimate report. Defaults to the current local timestamp of the location if not provided. Eg: \&quot;2020-07-16T17:05:08-07:00\&quot; (optional)
     - returns: RequestBuilder<CapacityResponse> 
     */
    open class func getLocationCapacityWithRequestBuilder(locationId: String, hoursToCalculate: Int? = nil, timestamp: String? = nil) -> RequestBuilder<CapacityResponse> {
        var path = "/locations/{location_id}/capacities"
        let locationIdPreEscape = "\(APIHelper.mapValueToPathItem(locationId))"
        let locationIdPostEscape = locationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{location_id}", with: locationIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "hours_to_calculate": hoursToCalculate?.encodeToJSON(), 
            "timestamp": timestamp?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<CapacityResponse>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the current capacity details for a location
     
     - parameter locationId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getLocationCapacitySummary(locationId: String, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<CapacitySummary, Error>) -> Void)) {
        getLocationCapacitySummaryWithRequestBuilder(locationId: locationId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get the current capacity details for a location
     - GET /locations/{location_id}/capacity_summaries
     - Get details of current capacity in a location
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter locationId: (path)  
     - returns: RequestBuilder<CapacitySummary> 
     */
    open class func getLocationCapacitySummaryWithRequestBuilder(locationId: String) -> RequestBuilder<CapacitySummary> {
        var path = "/locations/{location_id}/capacity_summaries"
        let locationIdPreEscape = "\(APIHelper.mapValueToPathItem(locationId))"
        let locationIdPostEscape = locationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{location_id}", with: locationIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CapacitySummary>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
