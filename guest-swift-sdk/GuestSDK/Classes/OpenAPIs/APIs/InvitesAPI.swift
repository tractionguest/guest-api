//
// InvitesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class InvitesAPI {
    /**
     Creates an Invite
     
     - parameter locationId: (path)  
     - parameter inviteCreateParams: (body)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func createLocationInvite(locationId: String, inviteCreateParams: InviteCreateParams, idempotencyKey: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<InviteDetail, Error>) -> Void)) {
        createLocationInviteWithRequestBuilder(locationId: locationId, inviteCreateParams: inviteCreateParams, idempotencyKey: idempotencyKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Creates an Invite
     - POST /locations/{location_id}/invites
     - Creates a new `Invite` for a specific `Location`.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter locationId: (path)  
     - parameter inviteCreateParams: (body)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - returns: RequestBuilder<InviteDetail> 
     */
    open class func createLocationInviteWithRequestBuilder(locationId: String, inviteCreateParams: InviteCreateParams, idempotencyKey: String? = nil) -> RequestBuilder<InviteDetail> {
        var path = "/locations/{location_id}/invites"
        let locationIdPreEscape = "\(APIHelper.mapValueToPathItem(locationId))"
        let locationIdPostEscape = locationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{location_id}", with: locationIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inviteCreateParams)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<InviteDetail>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Deletes an Invite
     
     - parameter inviteId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func deleteInvite(inviteId: String, idempotencyKey: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<Void, Error>) -> Void)) {
        deleteInviteWithRequestBuilder(inviteId: inviteId, idempotencyKey: idempotencyKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion(.success(()))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Deletes an Invite
     - DELETE /invites/{invite_id}
     - Deletes a single instance of `Invite`
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter inviteId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteInviteWithRequestBuilder(inviteId: String, idempotencyKey: String? = nil) -> RequestBuilder<Void> {
        var path = "/invites/{invite_id}"
        let inviteIdPreEscape = "\(APIHelper.mapValueToPathItem(inviteId))"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = GuestSDKAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get a Invite
     
     - parameter inviteId: (path)  
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getInvite(inviteId: String, include: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<InviteDetail, Error>) -> Void)) {
        getInviteWithRequestBuilder(inviteId: inviteId, include: include).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get a Invite
     - GET /invites/{invite_id}
     - Gets the details of a single instance of a `Invite`.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter inviteId: (path)  
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - returns: RequestBuilder<InviteDetail> 
     */
    open class func getInviteWithRequestBuilder(inviteId: String, include: String? = nil) -> RequestBuilder<InviteDetail> {
        var path = "/invites/{invite_id}"
        let inviteIdPreEscape = "\(APIHelper.mapValueToPathItem(inviteId))"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": include?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<InviteDetail>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter sortBy
     */
    public enum SortBy_getInvites: String, CaseIterable {
        case startDateAsc = "start_date_asc"
        case startDateDesc = "start_date_desc"
        case endDateAsc = "end_date_asc"
        case endDateDesc = "end_date_desc"
        case createdAtAsc = "created_at_asc"
        case createdAtDesc = "created_at_desc"
        case updatedAtAsc = "updated_at_asc"
        case updatedAtDesc = "updated_at_desc"
    }

    /**
     List All Invites
     
     - parameter limit: (query) Limits the results to a specified number, defaults to 50 (optional)
     - parameter offset: (query) Offsets the results to a specified number, defaults to 0 (optional)
     - parameter query: (query) Filters by &#x60;first_name&#x60;, &#x60;last_name&#x60;, &#x60;company&#x60;, and &#x60;email&#x60; (optional)
     - parameter withColours: (query) A comma separated list of case-insensitive colour values. i.e., &#x60;red&#x60;, &#x60;green&#x60;, &#x60;yellow&#x60;, and &#x60;orange&#x60; (optional)
     - parameter locationIds: (query) A comma separated list of Location IDs (optional)
     - parameter sortBy: (query) Sorts by the field name and direction provided where the pattern is &#x60;FIELD_NAME_DIRECTION&#x60; (optional)
     - parameter startsBefore: (query) Filters results to all those *before* the provided datetime (optional)
     - parameter startsAfter: (query) Filters results to all those *after* the provided datetime (optional)
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - parameter isApproved: (query) True to return approved and auto approved invites, False to return pending and rejected invites (optional)
     - parameter activeAfter: (query) Checks that an invite hasn&#39;t yet started, or has started and is still active after a specified time (optional)
     - parameter activeBefore: (query) Checks that an invite hasn&#39;t ended before a specified time (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getInvites(limit: Int? = nil, offset: Int? = nil, query: String? = nil, withColours: String? = nil, locationIds: String? = nil, sortBy: SortBy_getInvites? = nil, startsBefore: Date? = nil, startsAfter: Date? = nil, include: String? = nil, isApproved: Bool? = nil, activeAfter: Date? = nil, activeBefore: Date? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<PaginatedInvitesList, Error>) -> Void)) {
        getInvitesWithRequestBuilder(limit: limit, offset: offset, query: query, withColours: withColours, locationIds: locationIds, sortBy: sortBy, startsBefore: startsBefore, startsAfter: startsAfter, include: include, isApproved: isApproved, activeAfter: activeAfter, activeBefore: activeBefore).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     List All Invites
     - GET /invites
     - Gets a list of all `Invite` entities.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter limit: (query) Limits the results to a specified number, defaults to 50 (optional)
     - parameter offset: (query) Offsets the results to a specified number, defaults to 0 (optional)
     - parameter query: (query) Filters by &#x60;first_name&#x60;, &#x60;last_name&#x60;, &#x60;company&#x60;, and &#x60;email&#x60; (optional)
     - parameter withColours: (query) A comma separated list of case-insensitive colour values. i.e., &#x60;red&#x60;, &#x60;green&#x60;, &#x60;yellow&#x60;, and &#x60;orange&#x60; (optional)
     - parameter locationIds: (query) A comma separated list of Location IDs (optional)
     - parameter sortBy: (query) Sorts by the field name and direction provided where the pattern is &#x60;FIELD_NAME_DIRECTION&#x60; (optional)
     - parameter startsBefore: (query) Filters results to all those *before* the provided datetime (optional)
     - parameter startsAfter: (query) Filters results to all those *after* the provided datetime (optional)
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - parameter isApproved: (query) True to return approved and auto approved invites, False to return pending and rejected invites (optional)
     - parameter activeAfter: (query) Checks that an invite hasn&#39;t yet started, or has started and is still active after a specified time (optional)
     - parameter activeBefore: (query) Checks that an invite hasn&#39;t ended before a specified time (optional)
     - returns: RequestBuilder<PaginatedInvitesList> 
     */
    open class func getInvitesWithRequestBuilder(limit: Int? = nil, offset: Int? = nil, query: String? = nil, withColours: String? = nil, locationIds: String? = nil, sortBy: SortBy_getInvites? = nil, startsBefore: Date? = nil, startsAfter: Date? = nil, include: String? = nil, isApproved: Bool? = nil, activeAfter: Date? = nil, activeBefore: Date? = nil) -> RequestBuilder<PaginatedInvitesList> {
        let path = "/invites"
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": limit?.encodeToJSON(), 
            "offset": offset?.encodeToJSON(), 
            "query": query?.encodeToJSON(), 
            "with_colours": withColours?.encodeToJSON(), 
            "location_ids": locationIds?.encodeToJSON(), 
            "sort_by": sortBy?.encodeToJSON(), 
            "starts_before": startsBefore?.encodeToJSON(), 
            "starts_after": startsAfter?.encodeToJSON(), 
            "include": include?.encodeToJSON(), 
            "is_approved": isApproved?.encodeToJSON(), 
            "active_after": activeAfter?.encodeToJSON(), 
            "active_before": activeBefore?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<PaginatedInvitesList>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update a Invite
     
     - parameter inviteId: (path)  
     - parameter inviteUpdateParams: (body) Updated &#x60;Invite&#x60; information. 
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func updateInvite(inviteId: String, inviteUpdateParams: InviteUpdateParams, idempotencyKey: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<InviteDetail, Error>) -> Void)) {
        updateInviteWithRequestBuilder(inviteId: inviteId, inviteUpdateParams: inviteUpdateParams, idempotencyKey: idempotencyKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Update a Invite
     - PUT /invites/{invite_id}
     - Updates an existing `Invite`.
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter inviteId: (path)  
     - parameter inviteUpdateParams: (body) Updated &#x60;Invite&#x60; information. 
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - returns: RequestBuilder<InviteDetail> 
     */
    open class func updateInviteWithRequestBuilder(inviteId: String, inviteUpdateParams: InviteUpdateParams, idempotencyKey: String? = nil) -> RequestBuilder<InviteDetail> {
        var path = "/invites/{invite_id}"
        let inviteIdPreEscape = "\(APIHelper.mapValueToPathItem(inviteId))"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inviteUpdateParams)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<InviteDetail>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
