//
// RegistrationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class RegistrationAPI {
    /**
     Get a Registration
     
     - parameter registrationId: (path)  
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getRegistration(registrationId: String, include: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Result<Registration, Error>) -> Void)) {
        getRegistrationWithRequestBuilder(registrationId: registrationId, include: include).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get a Registration
     - GET /registrations/{registration_id}
     - Gets the details of a single instance of a `Registration`
     - :
       - type: openIdConnect
       - name: TractionGuestAuth
     - parameter registrationId: (path)  
     - parameter include: (query) A list of comma-separated related models to include (optional)
     - returns: RequestBuilder<Registration> 
     */
    open class func getRegistrationWithRequestBuilder(registrationId: String, include: String? = nil) -> RequestBuilder<Registration> {
        var path = "/registrations/{registration_id}"
        let registrationIdPreEscape = "\(APIHelper.mapValueToPathItem(registrationId))"
        let registrationIdPostEscape = registrationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{registration_id}", with: registrationIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": include?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<Registration>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
