//
// NotificationTriggerCreateParams.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** The root of the NotificationTrigger type&#39;s schema. */
public struct NotificationTriggerCreateParams: Codable { 


    public enum OffsetUnit: String, Codable, CaseIterable {
        case days = "days"
        case hours = "hours"
    }
    public enum OffsetOrigin: String, Codable, CaseIterable {
        case start = "START"
        case end = "END"
    }
    public enum OffsetDirection: String, Codable, CaseIterable {
        case before = "BEFORE"
        case after = "AFTER"
    }
    /** Whether the offset should be calculated as &#x60;days&#x60; or &#x60;hours&#x60; */
    public var offsetUnit: OffsetUnit
    /** An array made of only &#x60;INVITEE&#x60;, &#x60;HOSTS, or &#x60;LEP&#x60; as possible string values */
    public var notificationGroups: [String]
    public var emailTemplateId: Int
    /** Whether the offset should be calculated from the start, or finish of the event */
    public var offsetOrigin: OffsetOrigin
    /** The amount to offset the notification from the event */
    public var offsetAmount: Int
    /** Whether the offset should be calculated for before, or after the event */
    public var offsetDirection: OffsetDirection

    public init(offsetUnit: OffsetUnit, notificationGroups: [String], emailTemplateId: Int, offsetOrigin: OffsetOrigin, offsetAmount: Int, offsetDirection: OffsetDirection) {
        self.offsetUnit = offsetUnit
        self.notificationGroups = notificationGroups
        self.emailTemplateId = emailTemplateId
        self.offsetOrigin = offsetOrigin
        self.offsetAmount = offsetAmount
        self.offsetDirection = offsetDirection
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case offsetUnit = "offset_unit"
        case notificationGroups = "notification_groups"
        case emailTemplateId = "email_template_id"
        case offsetOrigin = "offset_origin"
        case offsetAmount = "offset_amount"
        case offsetDirection = "offset_direction"
    }

}
