//
// WatchlistMatch.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct WatchlistMatch: Codable { 


    public var id: String?
    public var altNames: [String]?
    public var federalRegisterNotice: String?
    public var name: String
    public var sourceInformationUrl: String?
    public var sourceListUrl: String?
    public var list: String
    public var type: String?
    public var category: String?
    public var street1: String?
    public var street2: String?
    public var city: String?
    public var state: String?
    public var country: String?
    public var notes: String?
    public var frc: String?
    public var start: String?
    public var end: String?
    public var frserve: String?
    public var optionalID: String?
    public var alertType: String?
    public var pairStatus: String?
    public var pairReason: String?
    public var pairComments: String?
    public var applicationDisplayName: String?
    public var applicationId: String?
    public var clientId: String?
    public var clientKey: String?
    public var clientFullName: String?
    public var listKey: String?
    public var listName: String?
    public var listId: String?
    public var listVersion: String?
    public var listModifyDate: String?
    public var listProfileId: String?
    public var listProfileKey: String?
    public var linkSingleStringName: String?
    public var listParentSingleStringName: String?
    public var listCategory: String?
    public var listPepCategory: String?
    public var listDoBs: String?
    public var listCountries: String?
    public var rankString: String?
    public var ranktype: String?
    public var rankweight: String?
    public var pairLoadDate: String?
    public var eAddressTo: String?
    public var eAddressCc: String?
    public var origin: String?
    public var secondsviewed: String?
    public var initialUser: String?
    public var isPairParentFlag: String?
    public var pairMetSearchCriteriaFlag: String?
    public var editableDueToAssignmentFlag: String?
    public var modifyDate: String?
    public var modifiedByUser: String?
    public var pairReportType: String?
    public var finscanCategory: String?
    public var wrapperStatus: String?
    public var sourceLists: String?

    public init(id: String?, altNames: [String]?, federalRegisterNotice: String?, name: String, sourceInformationUrl: String?, sourceListUrl: String?, list: String, type: String?, category: String?, street1: String?, street2: String?, city: String?, state: String?, country: String?, notes: String?, frc: String?, start: String?, end: String?, frserve: String?, optionalID: String?, alertType: String?, pairStatus: String?, pairReason: String?, pairComments: String?, applicationDisplayName: String?, applicationId: String?, clientId: String?, clientKey: String?, clientFullName: String?, listKey: String?, listName: String?, listId: String?, listVersion: String?, listModifyDate: String?, listProfileId: String?, listProfileKey: String?, linkSingleStringName: String?, listParentSingleStringName: String?, listCategory: String?, listPepCategory: String?, listDoBs: String?, listCountries: String?, rankString: String?, ranktype: String?, rankweight: String?, pairLoadDate: String?, eAddressTo: String?, eAddressCc: String?, origin: String?, secondsviewed: String?, initialUser: String?, isPairParentFlag: String?, pairMetSearchCriteriaFlag: String?, editableDueToAssignmentFlag: String?, modifyDate: String?, modifiedByUser: String?, pairReportType: String?, finscanCategory: String?, wrapperStatus: String?, sourceLists: String?) {
        self.id = id
        self.altNames = altNames
        self.federalRegisterNotice = federalRegisterNotice
        self.name = name
        self.sourceInformationUrl = sourceInformationUrl
        self.sourceListUrl = sourceListUrl
        self.list = list
        self.type = type
        self.category = category
        self.street1 = street1
        self.street2 = street2
        self.city = city
        self.state = state
        self.country = country
        self.notes = notes
        self.frc = frc
        self.start = start
        self.end = end
        self.frserve = frserve
        self.optionalID = optionalID
        self.alertType = alertType
        self.pairStatus = pairStatus
        self.pairReason = pairReason
        self.pairComments = pairComments
        self.applicationDisplayName = applicationDisplayName
        self.applicationId = applicationId
        self.clientId = clientId
        self.clientKey = clientKey
        self.clientFullName = clientFullName
        self.listKey = listKey
        self.listName = listName
        self.listId = listId
        self.listVersion = listVersion
        self.listModifyDate = listModifyDate
        self.listProfileId = listProfileId
        self.listProfileKey = listProfileKey
        self.linkSingleStringName = linkSingleStringName
        self.listParentSingleStringName = listParentSingleStringName
        self.listCategory = listCategory
        self.listPepCategory = listPepCategory
        self.listDoBs = listDoBs
        self.listCountries = listCountries
        self.rankString = rankString
        self.ranktype = ranktype
        self.rankweight = rankweight
        self.pairLoadDate = pairLoadDate
        self.eAddressTo = eAddressTo
        self.eAddressCc = eAddressCc
        self.origin = origin
        self.secondsviewed = secondsviewed
        self.initialUser = initialUser
        self.isPairParentFlag = isPairParentFlag
        self.pairMetSearchCriteriaFlag = pairMetSearchCriteriaFlag
        self.editableDueToAssignmentFlag = editableDueToAssignmentFlag
        self.modifyDate = modifyDate
        self.modifiedByUser = modifiedByUser
        self.pairReportType = pairReportType
        self.finscanCategory = finscanCategory
        self.wrapperStatus = wrapperStatus
        self.sourceLists = sourceLists
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case altNames = "alt_names"
        case federalRegisterNotice = "federal_register_notice"
        case name
        case sourceInformationUrl = "source_information_url"
        case sourceListUrl = "source_list_url"
        case list
        case type
        case category
        case street1
        case street2
        case city
        case state
        case country
        case notes
        case frc
        case start
        case end
        case frserve
        case optionalID = "optional_ID"
        case alertType = "alert_type"
        case pairStatus = "pair_status"
        case pairReason = "pair_reason"
        case pairComments = "pair_comments"
        case applicationDisplayName = "application_display_name"
        case applicationId = "application_id"
        case clientId = "client_id"
        case clientKey = "client_key"
        case clientFullName = "client_full_name"
        case listKey = "list_key"
        case listName = "list_name"
        case listId = "list_id"
        case listVersion = "list_version"
        case listModifyDate = "list_modify_date"
        case listProfileId = "list_profile_id"
        case listProfileKey = "list_profile_key"
        case linkSingleStringName = "link_single_string_name"
        case listParentSingleStringName = "list_parent_single_string_name"
        case listCategory = "list_category"
        case listPepCategory = "list_pep_category"
        case listDoBs = "list_do_bs"
        case listCountries = "list_countries"
        case rankString = "rank_string"
        case ranktype
        case rankweight
        case pairLoadDate = "pair_load_date"
        case eAddressTo = "e_address_to"
        case eAddressCc = "e_address_cc"
        case origin
        case secondsviewed
        case initialUser = "initial_user"
        case isPairParentFlag = "is_pair_parent_flag"
        case pairMetSearchCriteriaFlag = "pair_met_search_criteria_flag"
        case editableDueToAssignmentFlag = "editable_due_to_assignment_flag"
        case modifyDate = "modify_date"
        case modifiedByUser = "modified_by_user"
        case pairReportType = "pair_report_type"
        case finscanCategory = "finscan_category"
        case wrapperStatus = "wrapper_status"
        case sourceLists = "source_lists"
    }

}
