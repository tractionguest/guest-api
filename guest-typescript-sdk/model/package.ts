/**
 * Traction Guest API
 * The Traction Guest API is currently under limited release to select customers as we gather and iterate on feedback.  # Getting Started If you are interested in getting early access to the API, please send us an email to [support@tractionguest.com](mailto:support@tractionguest.com).  We will also add you to our Slack channel where you can ask questions and get further help.  # Terms and Conditions Please visit: [https://tractionguest.com/tos/api/](https://tractionguest.com/tos/api/)  # Versioning This API follows [semantic versioning](https://semver.org/), which follows the `Major`.`Minor`.`Patch` format.  * The `Major` number increments when potentially incompatible changes are made. * The `Minor` number increments when backwards-compatible additions are made. * The `Patch` number increments when backwards-compatible bug-fixes are made. 
 *
 * The version of the OpenAPI document: 0.13.0
 * Contact: support@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HostGuest } from './host';
import { ImageGuest } from './image';
import { LocationGuest } from './location';


/**
 * Root for a Package type\'s schema
 */
export interface PackageGuest { 
    id: number;
    recipient?: HostGuest;
    location: LocationGuest;
    /**
     * this can be one of the following states: \'processing\', \'recipient_matched\', \'needs_attention\' or \'picked_up\'
     */
    packageState: PackageGuest.PackageStateGuestEnum;
    /**
     * A carrier name that gets detected on the shipping label. i.e. USPS, Purolator, DHL, Canada Post, Royal Mail, etc... 
     */
    carrierName?: string;
    pickedUpAt?: Date | null;
    createdAt: Date;
    image?: ImageGuest;
}
export namespace PackageGuest {
    export type PackageStateGuestEnum = 'processing' | 'recipient_matched' | 'needs_attention' | 'picked_up';
    export const PackageStateGuestEnum = {
        Processing: 'processing' as PackageStateGuestEnum,
        RecipientMatched: 'recipient_matched' as PackageStateGuestEnum,
        NeedsAttention: 'needs_attention' as PackageStateGuestEnum,
        PickedUp: 'picked_up' as PackageStateGuestEnum
    };
}

